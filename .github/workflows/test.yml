# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ,v_1.0.0]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      build_variant:
        description: ''
        required: false
        default: 'InternalDebug'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache .gradle/caches
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache .gradle/wrapper
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: test workflow
        run: echo "./gradlew assemble${{ github.event.inputs.build_variant }} appDistributionUpload${{ github.event.inputs.build_variant }}"

#      - name: Build with Gradle with no inputs
#        if: ${{ github.event.inputs.build_variant == null || github.event.inputs.build_variant == ''}}
#        run: ./gradlew assembleInternalDebug

      - name: Build with Gradle
          run: |
            if ${{ github.event.inputs.build_variant != null && github.event.inputs.build_variant != ''}}; then
              ./gradlew "assemble${{ github.event.inputs.build_variant }}" "assembleInternalDebug"
            else
              ./gradlew assembleInternalDebug
            fi
